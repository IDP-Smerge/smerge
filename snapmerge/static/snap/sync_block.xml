<block-definition s="sync" type="command" category="control">
<header>
</header>
<code>
</code>
<translations>
</translations>
<inputs>
</inputs>
<script>
<block s="doCallCC">
<block s="reportJSFunction">
<list>
<l>
</l>
</list>
<l>IDE_Morph.prototype.projectMenu = function () {var menu,myself = this,world = this.world(),pos = this.controlBar.projectButton.bottomLeft(),graphicsName = this.currentSprite instanceof SpriteMorph ?&apos;Costumes&apos; : &apos;Backgrounds&apos;,shiftClicked = (world.currentKey === 16);menu = new MenuMorph(this);menu.addItem(&apos;Project notes...&apos;, &apos;editProjectNotes&apos;);menu.addLine();menu.addPair(&apos;New&apos;, &apos;createNewProject&apos;, &apos;^N&apos;);menu.addPair(&apos;Open...&apos;, &apos;openProjectsBrowser&apos;, &apos;^O&apos;);menu.addPair(&apos;Save&apos;, "save", &apos;^S&apos;);menu.addItem(&apos;Save As...&apos;, &apos;saveProjectsBrowser&apos;);menu.addLine();menu.addItem(&apos;Import...&apos;,function () {var inp = document.createElement(&apos;input&apos;);if (myself.filePicker) {document.body.removeChild(myself.filePicker);myself.filePicker = null;}inp.type = &apos;file&apos;;inp.style.color = "transparent";inp.style.backgroundColor = "transparent";inp.style.border = "none";inp.style.outline = "none";inp.style.position = "absolute";inp.style.top = "0px";inp.style.left = "0px";inp.style.width = "0px";inp.style.height = "0px";inp.style.display = "none";inp.addEventListener("change",function () {document.body.removeChild(inp);myself.filePicker = null;world.hand.processDrop(inp.files);},false);document.body.appendChild(inp);myself.filePicker = inp;inp.click();},&apos;file menu import hint&apos; // looks up the actual text in the translator);if (shiftClicked) {menu.addItem(localize(&apos;Export project...&apos;) + &apos; &apos; + localize(&apos;(in a new window)&apos;),function () {if (myself.projectName) {myself.exportProject(myself.projectName, shiftClicked);} else {myself.prompt(&apos;Export Project As...&apos;, function (name) {// false - override the shiftClick setting to use XMLmyself.exportProject(name, false);}, null, &apos;exportProject&apos;);}},&apos;show project data as XML\nin a new browser window&apos;,new Color(100, 0, 0));}menu.addItem(shiftClicked ?&apos;Export project as plain text...&apos; : &apos;Export project...&apos;,function () {if (myself.projectName) {myself.exportProject(myself.projectName, shiftClicked);} else {myself.prompt(&apos;Export Project As...&apos;, function (name) {myself.exportProject(name, shiftClicked);}, null, &apos;exportProject&apos;);}},&apos;save project data as XML\nto your downloads folder&apos;,shiftClicked ? new Color(100, 0, 0) : null);if (this.stage.globalBlocks.length) {menu.addItem(&apos;Export blocks...&apos;,function () {myself.exportGlobalBlocks(); },&apos;show global custom block definitions as XML&apos; +&apos;\nin a new browser window&apos;);menu.addItem(&apos;Unused blocks...&apos;,function () {myself.removeUnusedBlocks(); },&apos;find unused global custom blocks&apos; +&apos;\nand remove their definitions&apos;);}menu.addItem(&apos;Export summary...&apos;,function () {myself.exportProjectSummary(); },&apos;open a new browser browser window\n with a summary of this project&apos;);if (shiftClicked) {menu.addItem(&apos;Export summary with drop-shadows...&apos;,function () {myself.exportProjectSummary(true); },&apos;open a new browser browser window&apos; +&apos;\nwith a summary of this project&apos; +&apos;\nwith drop-shadows on all pictures.&apos; +&apos;\nnot supported by all browsers&apos;,new Color(100, 0, 0));menu.addItem(&apos;Export all scripts as pic...&apos;,function () {myself.exportScriptsPicture(); },&apos;show a picture of all scripts\nand block definitions&apos;,new Color(100, 0, 0));} menu.addItem( &apos;Export to smerge...&apos;,function(){var url = &apos;{{url}}&apos;;var ide = window.world.root().children[0];var data = ide.serializer.serialize(ide.stage);console.log(data);var r =new XMLHttpRequest();r.open(&apos;POST&apos;, url, true);r.setRequestHeader(&apos;Content-Type&apos;, &apos;application/xml&apos;);r.send(data); }); menu.addLine();menu.addItem(&apos;Import tools&apos;,function () {myself.getURL(myself.resourceURL(&apos;tools.xml&apos;),function (txt) {myself.droppedText(txt, &apos;tools&apos;);});},&apos;load the official library of\npowerful blocks&apos;);menu.addItem(&apos;Libraries...&apos;,function() {myself.getURL(myself.resourceURL(&apos;libraries&apos;, &apos;LIBRARIES&apos;),function (txt) {var libraries = myself.parseResourceFile(txt);new LibraryImportDialogMorph(myself, libraries).popUp();});},&apos;Select categories of additional blocks to add to this project.&apos;);menu.addItem(localize(graphicsName) + &apos;...&apos;,function () {myself.importMedia(graphicsName);},&apos;Select a costume from the media library&apos;);menu.addItem(localize(&apos;Sounds&apos;) + &apos;...&apos;,function () {myself.importMedia(&apos;Sounds&apos;);},&apos;Select a sound from the media library&apos;);menu.popup(world, pos);};</l>
</block>
</block>
</script>
</block-definition>
